{
	"info": {
		"_postman_id": "88be71bc-f2e4-435f-89b9-e9cbc7f1ad56",
		"name": "Get",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22876960"
	},
	"item": [
		{
			"name": "Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var getTime = pm.environment.get(\"Response_Time\");\r",
							"pm.test(\"Response time is less than \" + getTime.toString()+\"ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(getTime));\r",
							"});\r",
							"\r",
							"pm.test(\"Response status is 'OK'\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\\\"status\\\":\\\"OK\\\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/status",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get books (fiction)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var getTime = pm.environment.get(\"Response_Time\");\r",
							"pm.test(\"Response time is less than \" + getTime.toString()+\"ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(getTime));\r",
							"});\r",
							"\r",
							"pm.test(\"Response body not contain type = non-fiction\", function () {\r",
							"    pm.expect(pm.response.text()).not.include(\"\\\"type\\\": \\\"non-fiction\\\"\");\r",
							"    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"fiction\\\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/books?type=fiction&limit=20",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction",
							"description": "fiction or non-fiction (optional)"
						},
						{
							"key": "limit",
							"value": "20",
							"description": "optional"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get books (non-fiction)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var getTime = pm.environment.get(\"Response_Time\");\r",
							"pm.test(\"Response time is less than \" + getTime.toString()+\"ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(getTime));\r",
							"});\r",
							"\r",
							"pm.test(\"Response body not contain type = fiction\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\\\"type\\\":\\\"non-fiction\\\"\");\r",
							"    pm.expect(pm.response.text()).not.include(\"\\\"type\\\":\\\"fiction\\\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/books?type=non-fiction&limit=20",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "non-fiction",
							"description": "fiction or non-fiction (optional)"
						},
						{
							"key": "limit",
							"value": "20",
							"description": "optional"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get book detail via id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var getTime = pm.environment.get(\"Response_Time\");\r",
							"pm.test(\"Response time is less than \" + getTime.toString()+\"ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(parseInt(getTime));\r",
							"});\r",
							"\r",
							"pm.test(\"Response details for book id = 1\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\\\"id\\\":1\");\r",
							"    // pm.expect(pm.response.text()).to.include(\"\\\"name:\\\"\");\r",
							"    // pm.expect(pm.response.text()).to.include(\"\\\"author:\\\"\");\r",
							"    // pm.expect(pm.response.text()).to.include(\"\\\"isbn:\\\"\");\r",
							"    // pm.expect(pm.response.text()).to.include(\"\\\"type:\\\"\");\r",
							"    // pm.expect(pm.response.text()).to.include(\"\\\"price:\\\"\");\r",
							"    // pm.expect(pm.response.text()).to.include(\"\\\"current-stock:\\\"\");\r",
							"    // pm.expect(pm.response.text()).to.include(\"\\\"available:\\\"\");\r",
							"});\r",
							"\r",
							"var isAvailable = pm.response.json().available;\r",
							"if (isAvailable == false){\r",
							"    postman.setNextRequest(null);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/books/:bookId",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"books",
						":bookId"
					],
					"variable": [
						{
							"key": "bookId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "orderId"
		}
	]
}