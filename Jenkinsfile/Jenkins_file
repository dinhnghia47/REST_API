pipeline {
  agent {
        kubernetes {
            cloud "rco-ocp1"
            label "OTT-PC3_CN7-REST-${BUILD_NUMBER}"
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
spec:
   imagePullSecrets:
   - name: artifactory-plano
   hostNetwork: true
   containers:
   - name: newman
     image: artifactory-tx.rbbn.com/dev_ops-docker-prod-plano/newman
     command: ['cat']
     tty: true
     resources:
       limits:
         cpu: 4
         memory: 8Gi
       requests:
         cpu: 0.5
         memory: 4G
   - name: jnlp
     image: artifactory-tx.rbbn.com/dockerhub-docker-remote/jenkins/jnlp-slave:3.35-5-alpine
     resources:
       requests:
         memory: "1Gi"
         cpu:  1
       limits:
         memory: "1Gi"
         cpu:  1
            """
        }
    }

    options {
        timestamps()
    }

    environment {
        
        RequestTimeOut = 30000
        ReporterJUnit = "htmlextra"
		numberOfIteration = 1

    }

    stages {
        stage("Run REST API") {
            options {
                timeout(time: 15, unit: 'MINUTES')
            }
            steps {
                script {
                        try {
                    container('newman') {
                        try {
                            echo "Test suite is executing..."
                            sh """
                            mkdir -p ${WORKSPACE}/newman_results
                            newman run ${WORKSPACE}/Test/TheCatAPI.postman_collection.json -e ${WORKSPACE}/Test/TheCatAPI.postman_environment.json -n ${numberOfIteration} --insecure --timeout-request ${RequestTimeOut} --reporters cli,${ReporterJUnit} --reporter-${ReporterJUnit}-export ${WORKSPACE}/newman_results/Result.html
                            """
                            echo "Test suite is done..."
                        }
                        catch (err) {
                            echo "Collection run failed but skip the error to go with other stages"
                        }
                    }
                        }
                        catch (err) {
                            echo "Collection run failed but skip the error to go with other stages"
                        }
                }
            }
        }

        stage("Report html") {
            steps {
		publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: false, reportDir: 'newman_results/', reportFiles: 'Result.html', reportName: 'REST API Report', reportTitles: ''])
            }
        }
    }
}
